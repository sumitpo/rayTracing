CMAKE_MINIMUM_REQUIRED(VERSION 3.15)
PROJECT(raytracer-c C)

SET(TARGET raytracer-c)

# Set C standard
SET(CMAKE_C_STANDARD 99)
SET(CMAKE_C_STANDARD_REQUIRED ON)
SET(CMAKE_C_EXTENSIONS OFF)

# Option: whether to build examples; skip building examples when building as a library
OPTION(BUILD_EXAMPLES "Build the raytracer examples" ON)

# Find Conan-provided dependencies (generated by CMakeDeps)
# Note: conan install generates conan_deps.cmake
IF(EXISTS "${CMAKE_BINARY_DIR}/conan_deps.cmake")
  INCLUDE("${CMAKE_BINARY_DIR}/conan_deps.cmake")
ELSEIF(EXISTS "${CMAKE_CURRENT_BINARY_DIR}/conan_deps.cmake")
  INCLUDE("${CMAKE_CURRENT_BINARY_DIR}/conan_deps.cmake")
ENDIF()

# ================
# Library target
# ================
FILE(GLOB_RECURSE SOURCES "src/*.c")
ADD_LIBRARY(${TARGET} ${SOURCES})
set(ENABLE_ASAN ON)

# ASan for example (if enabled in parent)
IF(ENABLE_ASAN)
  TARGET_COMPILE_OPTIONS(${TARGET} PRIVATE -fsanitize=address -fno-omit-frame-pointer -g)
  TARGET_LINK_OPTIONS(${TARGET} PRIVATE -fsanitize=address)
ENDIF()

# Set include directories (PUBLIC means consumers also need them)
TARGET_INCLUDE_DIRECTORIES(
  ${TARGET}
  PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
         $<INSTALL_INTERFACE:include>
  PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src)

# Link Conan dependencies (assuming packages are log4c, libpng, argtable3)
# Conan 2.x automatically creates corresponding targets (e.g., log4c::log4c)
FIND_PACKAGE(log4c CONFIG REQUIRED)
FIND_PACKAGE(PNG CONFIG REQUIRED)
FIND_PACKAGE(argtable3 CONFIG REQUIRED)
FIND_PACKAGE(wavefront-parser CONFIG REQUIRED)
TARGET_LINK_LIBRARIES(${TARGET} PUBLIC log4c::log4c PNG::PNG
                                       wavefront-parser::wavefront-parser)
# argtable3::argtable3

# ================
# Executable target (main program)
# ================
IF(BUILD_EXAMPLES)
  ADD_SUBDIRECTORY(examples)
ENDIF()

# ================
# Installation rules (critical for conan package)
# ================
INCLUDE(GNUInstallDirs)

INSTALL(FILES include/raytracer.h include/config.h
        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

# Install library files
INSTALL(
  TARGETS ${TARGET}
  EXPORT raytracer-c-targets
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} # Windows DLL
)

# Install executable (if built)
IF(BUILD_EXECUTABLE)
  INSTALL(TARGETS raytracer DESTINATION ${CMAKE_INSTALL_BINDIR})
ENDIF()

# Install CMake config file (for find_package)
INSTALL(
  EXPORT raytracer-c-targets
  FILE raytracer-c-config.cmake
  NAMESPACE raytracer-c::
  DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/raytracer-c)